# hard coded first 7 inverse coefficients
A1 = lambda a: 1/a[0]
A2 = lambda a: -(a[1] / a[0] ** 3)
A3 = lambda a: (2 * a[1] ** 2 - a[0] * a[2]) / a[0] ** 5
A4 = lambda a: -(
    (5 * a[1] ** 3 - 5 * a[0] * a[1] * a[2] + a[0] ** 2  * a[3]) / a[0] ** 7
)
A5 = lambda a: (14 * a[1] ** 4 - 21 * a[0] * a[1] ** 2 * a[2] + 3 * a[0] ** 2 * a[2] ** 2 \
      + 6 * a[0] ** 2 * a[1] * a[3] - a[0] ** 3 * a[4]) / a[0] ** 9
A6 = lambda a: (-42 * a[1] ** 5 + 84 * a[0] * a[1] ** 3 * a[2] - 28 * a[0] ** 2 * a[1] ** 2 * a[3]
          + 7 * a[0] ** 2 * a[1] * (-4 * a[2] ** 2 + a[0] * a[4])
      + a[0] ** 3 * (7 * a[2] * a[3] - a[0] * a[5])
     ) / a[0] ** 11
A7 = lambda a: (1/( a[0] ** 13)) * (132 * a[1] ** 6 - 330 * a[0] * a[1] ** 4 * a[2] + 
      120 * a[0] ** 2 * a[1] ** 3 * a[3] - 36 * a[0] ** 2 * a[1] ** 2 * (-5 * a[2] ** 2 + a[0] * a[4]) + 
      4 * a[0] ** 3 * (-3 * a[2] ** 3 + a[0] * a[3] ** 2 + 2 * a[0] * a[2] * a[4]) + 
      8 * a[0] ** 3 * a[1] * (-9 * a[2] * a[3] + a[0] * a[5]) - a[0] ** 5 * a[6])
A8= lambda a: (
  (1/( a[0] ** 15)) * (-429 * a[1] ** 7 + 1287 * a[0] * a[1] ** 5 * a[2] - 
  495 * a[0] ** 2 * a[1] ** 4 * a[3] + 
  165 * a[0] ** 2 * a[1] ** 3 * (-6 * a[2] ** 2 + a[0] * a[4]) - 
  45 * a[0] ** 3 * a[1] ** 2 * (-11 * a[2] * a[3] + a[0] * a[5]) + 
  9 * a[0] ** 4 * (-5 * a[2] ** 2 * a[3] + a[0] * a[3] * a[4] + a[0] * a[2] * a[5]) + 
  3 * a[0] ** 3 * a[1] * (55 * a[2] ** 3 - 30 * a[0] * a[2] * a[4] + 
     3 * a[0] * (-5 * a[3] ** 2 + a[0] * a[6])) - a[0] ** 6 * a[7])
)

_Afuncs = [A1, A2, A3, A4, A5, A6, A7, A8]
